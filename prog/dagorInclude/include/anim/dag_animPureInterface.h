//
// Dagor Engine 6.5
// Copyright (C) Gaijin Games KFT.  All rights reserved.
//
#pragma once

#include <anim/dag_animDecl.h>
#include <util/dag_stdint.h>

// forward declarations for external classes
class Point3;


namespace AnimV20
{

//
// Generic IRQ interface
//
class IGenericIrq
{
public:
  virtual intptr_t irq(int type, intptr_t p1, intptr_t p2, intptr_t p3) = 0;
};

//
// Anim state switch director interface (ver2)
//
class IAnimStateDirector2
{
public:
  virtual void destroy() = 0;
  virtual IAnimStateDirector2 *clone(IPureAnimStateHolder *new_st) = 0;

  // name->id resolution interface
  virtual int getStateId(const char *state_name) = 0;
  virtual int getFlagId(const char *flag_name) = 0;
  virtual int getStateClassId(const char *class_name) = 0;
  virtual int getExPropsClassId(const char *class_name) = 0;
  virtual int getNamedRangeId(const char *range_name) = 0;
  virtual int getIrqId(const char *irq_name) = 0;

  // set handle for Irqs generated by graph;
  //     irq format is: (irq_id, state_id, animNode, user_data)
  virtual void setIrqHandler(IGenericIrq *irq) = 0;

  // direct and indirect state setup interface
  virtual void reset(bool set_def_state) = 0;
  virtual void forceState(int state_id) = 0;

  virtual void setFlag(int flag_id) = 0;
  virtual void clrFlag(int flag_id) = 0;
  virtual int getFlag(int flag_id) = 0;
  virtual void setFlags(int f) = 0;
  virtual int getFlags() = 0;

  // current state query interface
  virtual int getCurState() = 0;
  virtual int getCurState(int gt) = 0;
  virtual bool checkCurStateClass(int class_id) = 0;
  virtual bool checkNamedRange(int range_id) = 0;
  virtual void getCurStateExProps(int ex_props_class, void **ex_props) = 0;
  virtual void getCurStateExProps(int ex_props_class, void **ex_props, int gt) = 0;
  virtual void getAddOriginVel(Point3 &p) = 0;

  // returns generation count which is incremented each time any state is started
  virtual int getStateGeneration() = 0;

  // arbitrary state data query interface
  virtual bool checkStateClass(int state_id, int class_id) = 0;
  virtual void getCurStateExProps(int state_id, int ex_props_class, void **ex_props) = 0;

  virtual IAnimStateDirector2Debug *getDebug() = 0;

  virtual int save(void **data) = 0;
  virtual void load(void *data) = 0;
};

class IAnimStateDirector2Debug
{
public:
  virtual int getGraphThreadsCount() = 0;

  virtual int getStatesCount() = 0;
  virtual int getClassesCount() = 0;
  virtual int getFlagsCount() = 0;
  virtual int getIrqsCount() = 0;
  virtual int getExPropsClassesCount() = 0;

  virtual const char *getStateName(int state_id) = 0;
  virtual const char *getClassName(int class_id) = 0;
  virtual const char *getFlagName(int flag_id) = 0;
  virtual const char *getIrqName(int irq_id) = 0;
  virtual const char *getExPropName(int exp_prop_id) = 0;
};

} // end of namespace AnimV20
